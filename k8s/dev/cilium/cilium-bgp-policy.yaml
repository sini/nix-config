# =============================================================================
# Cilium BGP Configuration for Development Cluster (Single Node)
#
# This configuration sets up BGP for a single-node dev cluster (bitstream).
# Since there's no thunderbolt mesh, Cilium peers directly with local FRR.
# =============================================================================

---
# Shared peer configuration
apiVersion: cilium.io/v2
kind: CiliumBGPPeerConfig
metadata:
  name: local-frr-peer
  namespace: kube-system
spec:
  # Peer with local FRR daemon
  ebgpMultihop: 4
  timers:
    connectRetryTimeSeconds: 5
    holdTimeSeconds: 30
    keepAliveTimeSeconds: 10

  families:
    - afi: ipv4
      safi: unicast
      advertisements:
        matchLabels:
          advertise: "cilium-routes"

---
# Bitstream BGP Configuration
apiVersion: cilium.io/v2
kind: CiliumBGPClusterConfig
metadata:
  name: cilium-bgp-bitstream
  namespace: kube-system
spec:
  nodeSelector:
    matchLabels:
      kubernetes.io/hostname: bitstream
  bgpInstances:
    - name: "local-frr-peering"
      localASN: 65001 # Default ASN for single node
      peers:
        - name: "local-frr-daemon"
          peerASN: 65001 # iBGP with local FRR
          peerAddress: "10.10.10.5" # Node's main IP address
          peerConfigRef:
            name: "local-frr-peer"

---
# Advertisement Policy: Pod CIDR
apiVersion: cilium.io/v2
kind: CiliumBGPAdvertisement
metadata:
  name: pod-cidr-advertisement
  namespace: kube-system
  labels:
    advertise: cilium-routes
spec:
  advertisements:
    - advertisementType: PodCIDR

---
# Advertisement Policy: Service ClusterIPs
apiVersion: cilium.io/v2
kind: CiliumBGPAdvertisement
metadata:
  name: service-cluster-ips
  namespace: kube-system
  labels:
    advertise: cilium-routes
spec:
  advertisements:
    - advertisementType: Service
      service:
        addresses:
          - ClusterIP
      # Advertise all ClusterIP services
      selector:
        matchExpressions:
          - key: service.kubernetes.io/headless
            operator: DoesNotExist

---
# Advertisement Policy: LoadBalancer IPs
apiVersion: cilium.io/v2
kind: CiliumBGPAdvertisement
metadata:
  name: loadbalancer-ips
  namespace: kube-system
  labels:
    advertise: cilium-routes
spec:
  advertisements:
    - advertisementType: Service
      service:
        addresses:
          - LoadBalancerIP
          - ExternalIP
      # Advertise all LoadBalancer services
      selector:
        matchExpressions:
          - key: service.kubernetes.io/headless
            operator: DoesNotExist

---
# LoadBalancer IP Pool (matches dev environment configuration)
apiVersion: cilium.io/v2
kind: CiliumLoadBalancerIPPool
metadata:
  name: main-lb-pool
  namespace: kube-system
spec:
  blocks:
    - cidr: "10.12.0.0/16" # Matches dev environment loadBalancerRange
  serviceSelector:
    matchLabels: {} # Apply to all LoadBalancer services by default

---
# Node-specific router ID override (offset +10 to avoid FRR conflicts)
apiVersion: cilium.io/v2
kind: CiliumBGPNodeConfigOverride
metadata:
  name: bitstream # Must match the node name
  namespace: kube-system
spec:
  bgpInstances:
    - name: "local-frr-peering"
      routerID: "10.10.10.15" # FRR uses .5, Cilium uses .15
