# =============================================================================
# Cilium Helm Values â€” Dev cluster (Corrected Configuration)
#
# This configuration implements the final architecture:
# 1. BGP fabric (FRR + Cilium BGP CRDs) provides the underlay routing.
# 2. Cilium runs in a VXLAN overlay (tunnel mode) on top of the BGP fabric.
# 3. Cilium manages both `dummy0` (for tunnel traffic) and `enp2s0` (for
#    external service ingress) without conflict.
# =============================================================================

# -----------------------------------------------------------------------------
# Cluster identity & K8s API access
# -----------------------------------------------------------------------------
cluster:
  name: dev
  id: 1

# Correct - points to the stable loopback routed by the BGP fabric.
k8sServiceHost: 172.16.255.1
k8sServicePort: 6443

# -----------------------------------------------------------------------------
# Service handling / kube-proxy replacement
# -----------------------------------------------------------------------------
# Correct - eBPF-based kube-proxy replacement is a core feature.
kubeProxyReplacement: true
socketLB:
  hostNamespaceOnly: true
localRedirectPolicies:
  enabled: true

# -----------------------------------------------------------------------------
# Datapath & BPF knobs
# -----------------------------------------------------------------------------
bpf:
  masquerade: true
  lbExternalClusterIP: true
  hostLegacyRouting: true

# -----------------------------------------------------------------------------
# IPAM & Pod CIDRs
# -----------------------------------------------------------------------------
ipam:
  mode: cluster-pool
  operator:
    clusterPoolIPv4PodCIDRList: ["172.20.0.0/16"]

# -----------------------------------------------------------------------------
# Routing Mode (CRITICAL CHANGE)
#
# This is the primary fix. We are switching from 'native' mode to 'tunnel'
# mode. This resolves the architectural conflict by wrapping pod-to-pod
# traffic in a VXLAN overlay, which can then travel across your proven,
# high-speed BGP host network without issue.
# -----------------------------------------------------------------------------
routingMode: tunnel # <-- CHANGED from 'native'
tunnelProtocol: vxlan # <-- ADDED to specify the overlay protocol
# The following two keys are for native routing mode and must be removed.
# enable-endpoint-routes: true # <-- REMOVED
# ipv4NativeRoutingCIDR: 172.20.0.0/16 # <-- REMOVED

# -----------------------------------------------------------------------------
# CNI chaining
# -----------------------------------------------------------------------------
cni:
  chainingMode: portmap

# -----------------------------------------------------------------------------
# Masquerading (SNAT) behavior
# -----------------------------------------------------------------------------
# This section remains correct for handling traffic from pods to the outside world.
enableIPv4Masquerade: true
#egressMasqueradeInterfaces: "enp2s0"
enableIpMasqAgent: false
enableIPv4: true
nonMasqueradeCIDRs: "{10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}"
masqLinkLocal: false

# -----------------------------------------------------------------------------
# Device exposure to Cilium (CRITICAL CHANGE)
#
# With tunneling enabled, it is now safe to manage both devices.
# - 'dummy0': Will be used as the device for sending/receiving VXLAN traffic
#            over your BGP fabric.
# - 'enp2s0': Will be used for the BPF program that handles ingress for your
#           ExternalIP services.
# -----------------------------------------------------------------------------
devices:
  - "dummy0"
  - "enp2s0"
  - "enp199s0f5"
  - "enp199s0f6"

# This key is primarily for native routing mode and can be removed for simplicity.
# nodePort:
#    directRoutingDevice: "dummy0" # <-- REMOVED

# -----------------------------------------------------------------------------
# BGP control-plane (for FRR peering)
# -----------------------------------------------------------------------------
# This is all correct. BGP will provide the underlay routing for the VXLAN overlay.
bgpControlPlane:
  enabled: true
externalIPs:
  enabled: true
loadBalancer:
  mode: snat

# -----------------------------------------------------------------------------
# Hubble (observability)
# -----------------------------------------------------------------------------
hubble:
  enabled: true
  relay:
    enabled: true
  ui:
    enabled: true

# -----------------------------------------------------------------------------
# Operator & rollout
# -----------------------------------------------------------------------------
operator:
  replicas: 2
rollOutCiliumPods: true

# -----------------------------------------------------------------------------
# Logging
# -----------------------------------------------------------------------------
debug:
  enabled: true
